{% load static %}
{% load my_tags %}
<html lang="en-JP">
<link href="{% static 'main/test.css' %}" rel="stylesheet">
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>

<body style="background-image: url('{% static 'main/WhatsApp画像 2024-02-14 13.27.37_9343389c.jpg' %}'); background-size: 100% 100%; background-position: center; background-repeat: no-repeat; margin: 0; padding: 0;">
<div class="container-fluid" id="app">
    <div v-for="test in tests" :key="test.id">
    {{ test }}
    </div>
    <div class="row">
        <div class="col-md-6" id="hiding">
        <div class="card mb-4">
        <div class="card-body">
            <div style="display: flex; justify-content: space-between; align-items: center;">
            <button type="button" class="btn btn-success mb-3" style="width: 200px; border: 5px solid black;">
            <a {% if user.is_authenticated %} href="{% url 'accounts:logout' %}?next={% url 'accounts:login' %}?next={% url 'main:profile' %}"
            {% else %} href="{% url 'accounts:login' %}?next={% url 'main:profile' %}"
            {% endif %} class="w-50 pl-3 pb-4 text-white">
            {% if user.is_authenticated %}
            Logout
            {% else %}
            Login
            {% endif %}
            </a></button>
            <button id="toggleFormBtn" class="btn btn-success mb-3" style="width: 200px; border: 5px solid black;" data-toggle="collapse" data-target="#signupForm">Create a new account!</button>
            <div class="collapse" id="signupForm">
                <form method="post">
                    {% csrf_token %}
                    {% for field in signup_form %}
                        <label class="text-dark font-weight-bold" for="{{ field.id_for_label }}">{{ field.label }}</label>
                        {{ field }}
                {% endfor %}
                <div class="text-center mt-3">
                    <button type="submit" class="btn btn-success btn-lg" style="width: 200px; border: 5px solid black;">Create!</button>
                </div>
                </form>
            </div>
            </div>
            <button id="toggleFormBtn" class="btn btn-info mb-3" style="border: 5px solid black;" data-toggle="collapse" data-target="#enterForm">Enter schools and classrooms!</button>
            <div class="collapse" id="enterForm">
            <form method="post" action="{% url 'main:profile' %}">
                {% csrf_token %}
                <h2>Enter school name and password to create a new classroom!</h2>
                <div class="form-group">
                    <label for="school_name">School Name:</label>
                    <input type="text" name="school_name" id="school_name" class="form-control">
                </div>
                <div class="form-group">
                    <label for="school_password">Password:</label>
                    <input type="password" name="school_password" id="school_password" class="form-control">
                </div>
                <h2>Enter classroom name and password to do tests and exercises!</h2>
                <div class="form-group">
                    <label for="classroom_name">Classroom Name:</label>
                    <input type="text" name="classroom_name" id="classroom_name" class="form-control">
                </div>
                <div class="form-group">
                    <label for="classroom_password">Classroom Password:</label>
                    <input type="password" name="classroom_password" id="classroom_password" class="form-control">
                </div>
                <h2>Enter both school and classroom names and passwords to create tests!</h2>
                <button type="submit" class="btn btn-primary" style="width: 200px; border: 5px solid black;">Enter</button>
            </form>
            </div>

            <button id="toggleFormBtnAll" class="btn btn-primary mb-3" style="border: 5px solid black;" data-toggle="collapse" data-target="#alltestrecords">Test records!</button>
            <div class="collapse" id="alltestrecords">
            {% for test in session_tests %}
            <button id="toggleFormBtn{{ test.id }}" class="btn btn-success mb-3 toggle-test-btn" style="border: 5px solid black;" data-toggle="collapse" data-target="#testrecords{{ test.id }}">{{ test }}</button>
            <div class="collapse test-collapse" id="testrecords{{ test.id }}" data-loaded="false">
                {% for session in account_sessions %}
                {% if session.number == test.id %}
                <button id="toggleFormBtn" class="btn btn-info mb-3 session-test-btn" style="border: 5px solid black;" data-toggle="collapse" data-target="#sessions{{ session.id }}{{ test.id }}">{{ session.timestamp }}</button>
                <div class="collapse" id="sessions{{ session.id }}{{ test.id }}">
                    {% for record in test_records %}
                    {% if record.account_sessions.id == session.id %}
                    <div class="box" style="border: 2px solid black; padding: 10px; margin-bottom: 10px;">
                    {% if record.total_recorded_score == 0 %}
                    <p>Question Name: {{ record.question_name }}</p>
                    {% for option in options %}
                    {% if option.question.id == record.question.id %}
                    {% if option.name == record.selected_option_name %}
                    {% if option.question.question_sound %}
                    <button class="play-audio-btn" data-audio-url="{% url 'main:question_sound' option.question.id %}">Play Audio</button>
                    <audio controls style="display:none;">
                        <source src="" type="audio/mpeg">
                        Your browser does not support the audio element.
                    </audio>
                    {% endif %}
                    {% if option.question.question_picture %}<img style="width:90px;height:90px;margin-top: 8px; border:3px solid black;" src="{% url 'main:question_picture' option.question.id %}" alt="Question">{% endif %}
                    <p>Recorded Score: {{ record.recorded_score }}
                    {% if record.recorded_score == 0 %}<span class="icon cross-mark text-danger" style="font-size: 40px">&#x2717;</span>
                    {% else %}
                    <span class="icon check-mark text-success" style="font-size: 40px">&#x2713;</span>
                    {% endif %}
                    </p>
                    <p>Selected Option Name: {{ record.selected_option_name|remove_letters_from_end:option.pk }}</p>
                    {% endif %}
                    {% if option.is_correct %}
                            <p>Correct answer: {{ option.name|remove_letters_from_end:option.pk }}</p>
                    {% endif %}
                    {% endif %}
                    {% endfor %}
                    {% endif %}
                    {% if record.total_recorded_score != 0 %}
                    <h1>Your total score!: {{ record.total_recorded_score|remove_numbers_from_end:2 }}/{{ test.total_questions }}</h1>
                    {% endif %}
                    </div>
                    {% endif %}
                    {% endfor %}
                </div>
                {% endif %}
                {% endfor %}
            </div>
            {% endfor %}
            </div>


















            <div class="container mt-5" id="classroomList">
                {% for school in schools %}
                    {% if school.name == school_name and school.hashed_password == school_password %}
                        {% if classroom_name == '' and classroom_password == '' %}
                        <div>
                                <h5 class="card-title">Create Classroom</h5>
                                <form class="createClassroomForm" method="post" action="{% url 'main:classroom_create' school.pk %}" enctype="multipart/form-data">
                                    {% csrf_token %}
                                    {% for field in classroom_form %}
                                        <div class="form-group">
                                            <label for="{{ field.id_for_label }}">{{ field.label }}</label>
                                            {{ field }}
                                        </div>
                                    {% endfor %}
                                    <button type="submit" class="btn btn-success" style="width: 200px; border: 5px solid black;">Create Classroom</button>
                                </form>
                        </div>
                        {% endif %}

                        {% for classroom in classrooms %}
                            {% if classroom.school.name == school_name and classroom.school.hashed_password == school_password %}
                            {% if classroom.name == classroom_name and classroom.hashed_password == classroom_password %}
                            <button id="toggleFormBtn" class="btn btn-warning mb-3" style="width: 200px; border: 5px solid black;" data-toggle="collapse" data-target="#testcreateForm">Create a new test!</button>
                            <div class="collapse" id="testcreateForm">
                                        <h5 class="card-title">Create Test</h5>
                                        <form class="createTestForm" method="post" action="{% url 'main:test_create' classroom.pk %}" enctype="multipart/form-data">
                                            {% csrf_token %}
                                            {% for field in test_form %}
                                                <div class="form-group">
                                                    <label for="{{ field.id_for_label }}">{{ field.label }}</label>
                                                    {{ field }}
                                                </div>
                                            {% endfor %}
                                            <button type="submit" class="btn btn-success" style="width: 200px; border: 5px solid black;">Create</button>
                                        </form>
                            </div>
                            <h3>Current tests!</h3>
                            {% for test in tests %}
                            {% if classroom in test.classroom.all %}
                            <button id="toggleFormBtn" style="width: 200px; border: 5px solid black;" class="btn btn-primary mb-3" data-toggle="collapse" data-target="#{{ test.pk }}Content">{{ test.name }}</button>
                            <button id="toggleFormBtn" style="width: 200px; border: 5px solid black;" class="btn btn-primary mb-3" data-toggle="collapse" data-target="#{{ test.pk }}update_Content">Update {{ test.name }}</button>
                            <div class="collapse" id="{{ test.pk }}update_Content">
                            <form method="post" action="{% url 'main:test-classroom' test.pk %}" enctype="multipart/form-data">
                            {% csrf_token %}
                            <div class="form-group">
                                <div class="checkbox-container border p-3" style="max-height: 200px; overflow-y: auto;">
                                {% for field in connect_form %}
                                        <label class="form-check-label text-dark font-weight-bold" for="{{ field.id_for_label }}">
                                            {{ field.label }}s
                                        </label>
                                        <div class="form-check">
                                            {% for classroom_t in classrooms %}
                                            <ul>
                                            <li>
                                            <label for="{{ classroom_t.id }}">
                                                <input type="checkbox" name="classroom" value="{{ classroom_t.id }}" class="form-check-input" {% if classroom_t in test.classroom.all %}checked{% endif %} id="{{ classroom_t.id }}">
                                                {{ classroom_t.name }}
                                            </label>
                                            </li>
                                            </ul>
                                            {% endfor %}
                                        </div>
                                {% endfor %}
                                </div>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-success border border-dark text-white">Update test!</button>
                            </div>
                            </form>
                            </div>
                            <div class="collapse" id="{{ test.pk }}Content">
                                {% if test.test_picture %}
                                <img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:test_picture' test.id %}" alt="Lesson">
                                {% endif %}
                                    <h5 class="card-title">Create Question</h5>
                                    <form class="createQuestionForm" method="post" action="{% url 'main:question_create' test.pk %}" enctype="multipart/form-data">
                                        {% csrf_token %}
                                        {% for field in question_form %}
                                            <div class="form-group">
                                                <label for="{{ field.id_for_label }}">{{ field.label }}</label>
                                                {{ field }}
                                            </div>
                                        {% endfor %}
                                        <button type="submit" class="btn btn-success" style="width: 200px; border: 5px solid black;">Create Question</button>
                                    </form>
                            <h3>Current Questions!</h3>
                            <div class="question-container{{ test.pk }}"></div>
                            {% for question in questions %}
                            {% if question.test == test %}
                                <div class="question_deletion" style="display: flex; align-items: center;">
                                <button id="toggleFormBtn" class="btn btn-primary mb-3" style="width: 200px; border: 5px solid black;" data-toggle="collapse" data-target="#{{ test.name }}{{ question.pk }}Content">{{ question.name }}</button>
                                <form method="post" action="{% url 'main:question_delete' question.pk %}" class="question-delete-form">
                                {% csrf_token %}
                                <button type="submit" class="btn btn-danger" style="width: 100px; border: 5px solid black; margin-left: 50px;">Delete</button>
                                </form>
                                </div>
                                <div class="collapse" id="{{ test.name }}{{ question.pk }}Content">
                                {% if question.question_picture %}
                                <img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:question_picture' question.id %}" alt="Lesson">
                                {% endif %}
                                    <h5 class="card-title">Create Option</h5>
                                    <form class="createOptionForm" method="post" action="{% url 'main:option_create' question.pk %}" enctype="multipart/form-data">
                                        {% csrf_token %}
                                        {% for field in option_form %}
                                            <div class="form-group">
                                                <label for="{{ field.id_for_label }}">{{ field.label }}</label>
                                                    {{ field }}
                                            </div>
                                        {% endfor %}
                                        <button type="submit" class="btn btn-success" style="width: 200px; border: 5px solid black;">Create Option</button>
                                    </form>
                                    <h3>Current options</h3>
                                    <div class="option-container">
                                    {% for option in options %}
                                    {% if option.question == question %}
                                    <div class="option_deletion" style="display: flex; align-items: center;">
                                    <button class="btn btn-success mb-3" style="width: 200px; border: 5px solid black;">{{ option.name|remove_letters_from_end:option.pk }}</button>
                                    <form method="post" action="{% url 'main:option_delete' option.pk %}" class="option-delete-form">
                                    {% csrf_token %}
                                    <button type="submit" class="btn btn-danger" style="width: 100px; margin-left: 50px; border: 5px solid black; margin-top: auto;">Delete</button>
                                    </form>
                                    </div>
                                    {% endif %}
                                    {% endfor %}
                                    </div>
                                <h3 style="display: flex; align-items: center;">Remaining questions!</h3>
                            </div>
                            {% endif %}
                            {% endfor %}
                            <h3 style="display: flex; align-items: center;">Remaining tests!</h3>
                            </div>
                            {% endif %}
                            {% endfor %}
                            {% endif %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                {% endfor %}
            </div>
        </div>
        </div>
        </div>


        <div class="col-md-6" id="change">
            <div class="quiz-container d-flex justify-content-center align-items-center" id="quiz">
                <div class="quiz-header">
                    {% for classroom in classrooms %}
                    {% if classroom_name == classroom.name and classroom_password == classroom.hashed_password %}
                    <h2>You are in the Classroom: {{ classroom.name }}</h2>
                    <h2>
                    {% if classroom.classroom_picture %}<img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:classroom_picture' classroom.id %}" alt="Question">{% endif %}
                    <div>
                    {% for test in tests %}
                    {% if classroom in test.classroom.all %}
                    <h2>
                    <button id="toggleFormBtn{{ test.pk }}" class="btn btn-dark do-test" style="width: 400px; height: 120px;" data-toggle="collapse" data-target="#test{{ test.pk }}Content">
                        {{ test.name }}
                        {% if test.test_picture %}
                            <img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:test_picture' test.id %}" alt="Test">
                        {% endif %}
                        <form id="deleteSubmissionsForm" method="post" action="{% url 'main:submissions_delete' %}">
                            {% csrf_token %}
                        </form>
                    </button>
                    <div class="collapse" id="test{{ test.pk }}Content">
                    <div class="test-container">
                        <h3>{{ test.name }}</h3>
                        <form id="record-form" class="record-form" method="post" action="{% url 'main:test_record' test.pk %}">
                            {% csrf_token %}
                            <input type="hidden" name="test_pk" value="{{ test.pk }}">
                            <button type="submit" class="record-message btn btn-primary" data-test-id="{{ test.pk }}Record Answers">Record answers!</button>
                        </form>
                    </div>
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" style="display: none;">
                          Launch modal
                        </button>
                        <div class="message"></div>
                        <div id="completion-message"></div>
                        {% for question in questions %}
                        {% if question.test == test %}
                        <div class="question" id="question{{ question.id }}" style="display: {% if forloop.first %}block{% else %}none{% endif %}">
                            <div class="hide-button">
                            <h2>{{ question }}{% if question.question_picture %}<img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:question_picture' question.id %}" alt="Question">{% endif %}</h2>
                            {% if question.question_sound %}
                            <audio controls>
                                <source src="{% url 'main:question_sound' question.id %}" type="audio/mpeg">
                                Your browser does not support the audio element.
                            </audio>
                            {% endif %}
                            <ul class="list-unstyled">
                                <form class="test-form" method="post" action="{% url 'main:test_submit' test.pk %}" onsubmit="submitForm({{ question.id }})">
                                    {% csrf_token %}
                                    <div class="container-fluid">
                                    <div class="row">
                                    {% for option in options %}
                                    {% if option.question.pk == question.pk %}
                                    <div class="col-md-6">
                                            {% for field in test_submission_form %}
                                            {% for choice in field %}
                                            {% if choice.choice_label == option.name %}
                                            <label for="{{ option.pk }}" style="font-size: 50px;"><input type="radio" name="selected_option" value="{{ option.pk }}" id="{{ option.pk }}" style="width: 20px; height: 20px;">
                                            {{ option.name|remove_letters_from_end:option.pk }}
                                            </label>
                                             {% if option.option_picture %}
                                                <img style="width:100px;height:100px;margin-top: 8px; border:3px solid black;" src="{% url 'main:option_picture' option.id %}" alt="Option">
                                            {% endif %}
                                            {% endif %}
                                            {% endfor %}
                                            {% endfor %}
                                    </div>
                                    {% endif %}
                                    {% endfor %}
                                    </div>
                                    </div>
                                    <button id="submit-btn" type="submit" onclick="submitForm({{ question.id }})">Submit answer for {{ question.name }}</button>
                                </form>
                            </ul>
                            </div>
                        </div>
                        {% endif %}
                        {% endfor %}
                    </div>
                    </h2>
                    {% endif %}
                    {% endfor %}
                    </div>
                    {% endif %}
                    {% endfor %}
                    </h2>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
script src="{% static 'main/test_submit.js'%}?v=9"></script
script src="{% static 'main/next_questions.js'%}?v=1">



<script>
    new Vue({
        el: '#app',
        data: {
            tests: [] // Initialize with dynamic data from Django
            // Add more data properties as needed
        },
        created() {
            // Fetch dynamic data from your Django backend API
            this.fetchTests();
        },
        methods: {
            fetchTests() {
                // Make an AJAX request to fetch tests from your Django backend
                // Update this.tests with the response data
            }
            // Add more methods as needed
        }
    });
</script>



<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle play audio button click
    document.querySelectorAll('.play-audio-btn').forEach(button => {
        button.addEventListener('click', function() {
            const audioUrl = this.getAttribute('data-audio-url');
            const audioElement = this.nextElementSibling;

            if (audioElement && audioElement.tagName === 'AUDIO') {
                const sourceElement = audioElement.querySelector('source');
                sourceElement.src = audioUrl;
                audioElement.style.display = 'block';
                audioElement.load();
                audioElement.play();
                this.style.display = 'none';
            }
        });
    });
});
</script>












<script>
$(document).ready(function() {
    // Arrays of audio file URLs for wrong and correct answers
    var wrongAudioUrls = [
        "{% static 'main/soundfiles/sound13.mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (27).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (28).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (29).mp3' %}"
    ];
    var correctAudioUrls = [
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (17).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (18).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (19).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (20).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (21).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (22).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (23).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (24).mp3' %}",
        "{% static 'main/soundfiles/Record (online-voice-recorder.com) (25).mp3' %}"
    ];
    var currentWrongAudioIndex = 0;
    var currentCorrectAudioIndex = 0;

    $('.test-form').submit(function(event) {
        event.preventDefault(); // Prevent default form submission

        var form = $(this);

        $.ajax({
            type: form.attr('method'),
            url: form.attr('action'),
            data: form.serialize(),
            success: function(response) {
                // Hide content within hide-button div
                $('.hide-button').hide();

                // Display message
                $('.message').text(response.message);

                // Remove any existing icons
                $('.icon').remove();

                $('.continue-button').remove();

                form[0].reset();

                var audioUrl, audioElement;
                if (response.message === 'Correct answer') {
                    // Append green check mark icon
                    $('.message').after('<span class="icon check-mark text-success" style="font-size: 90px">&#x2713;</span>');

                    // Reset wrong answer audio index to start from 0
                    currentWrongAudioIndex = 0;

                    // Get the current audio URL for correct answer and create an audio element
                    audioUrl = correctAudioUrls[currentCorrectAudioIndex];
                    audioElement = new Audio(audioUrl);

                    // Play the audio
                    audioElement.volume = 1.0; // Default volume
                    audioElement.play();

                    // Increment the index for the next audio file
                    currentCorrectAudioIndex = (currentCorrectAudioIndex + 1) % correctAudioUrls.length;
                } else {
                    // Append red cross mark icon
                    $('.message').after('<span class="icon cross-mark text-danger" style="font-size: 90px">&#x2717;</span>');

                    // Reset correct answer audio index to start from 0
                    currentCorrectAudioIndex = 0;

                    // Get the current audio URL for wrong answer and create an audio element
                    audioUrl = wrongAudioUrls[currentWrongAudioIndex];
                    audioElement = new Audio(audioUrl);

                    // Play the audio
                    audioElement.volume = 1.0; // Default volume
                    audioElement.play();

                    // Increment the index for the next audio file
                    currentWrongAudioIndex = (currentWrongAudioIndex + 1) % wrongAudioUrls.length;
                }

                // Append continue button under the icon
                $('.icon').after('<button class="continue-button" id="continue-button">Continue</button>');
            },
            error: function(xhr, status, error) {
                console.error(error);
                $('.message').text('An error occurred while processing your request.');
            }
        });
    });

    // Handle continue button click
    $(document).on('click', '.continue-button', function() {
        // Show content within hide-button div
        $('.hide-button').show();
        // Remove continue button
        $('.message').empty();
        $('.icon').remove();
        $(this).remove();
    });
});
</script>



<script>
function shuffleQuestions(testId) {
    var testContent = document.getElementById('test' + testId + 'Content');
    var allQuestions = testContent.querySelectorAll('.question');
    var shuffledQuestions = Array.from(allQuestions).sort(function() {
        return 0.5 - Math.random();
    });

    // Hide all questions
    allQuestions.forEach(function(question) {
        question.style.display = 'none';
    });

    // Display shuffled questions
    shuffledQuestions.forEach(function(question) {
        question.style.display = 'block';
    });
}
</script>


<script>

function submitForm(questionIndex) {
    var currentQuestion = document.getElementById('question' + questionIndex);
    currentQuestion.style.display = 'none';

    var testContent = currentQuestion.closest('.collapse');
    var allQuestions = testContent.querySelectorAll('.question');
    var questionIds = Array.from(allQuestions).map(function(question) {
        return parseInt(question.id.replace('question', ''), 10);
    });

    // Find the index of the current question's ID in the sorted array
    var currentIndex = questionIds.indexOf(questionIndex);

    // Find the next question with a higher ID
    var nextQuestionId = questionIds.find(function(id, index) {
        return index > currentIndex;
    });

    if (nextQuestionId) {
        var nextQuestion = document.getElementById('question' + nextQuestionId);
        nextQuestion.style.display = 'block';
    } else {
        // If there's no next question within the same test, proceed to the next test
        var nextTestContent = testContent.nextElementSibling;
        if (nextTestContent) {
            nextTestContent.classList.add('show');
            var firstQuestionOfNextTest = nextTestContent.querySelector('.question');
            if (firstQuestionOfNextTest) {
                firstQuestionOfNextTest.style.display = 'block';
            }
        }
    }

    return false;
}

</script>




<script>
$(document).ready(function() {
    $('.record-form').submit(function(event) {
        event.preventDefault(); // Prevent default form submission

        var form = $(this);
        var button = form.find('button');
        var message = form.find('.record-message'); // Find the message element within the form container

        // Disable the button and add disabled class
        button.prop('disabled', true).addClass('disabled');

        $.ajax({
            type: form.attr('method'),
            url: form.attr('action'),
            data: form.serialize(),
            success: function(response) {
                // Display message
                message.text(response.message); // Set the text of the message element within the form container to the message from the response
                message.show();
            },
            error: function(xhr, status, error) {
                console.error(error);
                message.text('An error occurred while processing your request.');
                message.show();
            },
        });
    });
});
</script>

<script>
$(document).ready(function() {
    // Function to enable the record-message button
    function enableRecordButton(testPk) {
        var recordButton = $('[data-test-id="' + testPk + 'Record Answers"]');
        recordButton.prop('disabled', false).removeClass('disabled').text("Record answers!"); // Update text of the record-message button
    }

    // Event listener for the do-test button
    $('.do-test').click(function() {
        var testPk = $(this).attr('id').replace('toggleFormBtn', ''); // Extract test pk from button id
        enableRecordButton(testPk); // Call the function to enable the record-message button
    });
});

</script>






<script>
$(document).ready(function() {
    // Add click event listener to the button
    $('.do-test').click(function(event) {
        event.preventDefault(); // Prevent the default button click behavior


        $.ajax({
            type: 'POST',
            url: $('#deleteSubmissionsForm').attr('action'), // Get the form's action URL
            data: $('#deleteSubmissionsForm').serialize(), // Serialize the form data
            success: function(data) {
                // Handle success response
                console.log('Submissions deleted successfully!');
            },
            error: function(xhr, status, error) {
                // Handle error response
                console.error(xhr.responseText);
            }
        });
    });
});
</script>



<script>
    $(document).ready(function() {
        $('.do-test').click(function() {
            var colDiv = $('#change');
            var btnId = $(this).attr('id');
            var testId = btnId.replace('toggleFormBtn', '');
            var contentId = '#test' + testId + 'Content';
            if (colDiv.hasClass('col-md-6')) {
                colDiv.removeClass('col-md-6').addClass('col-md-12');
            } else {
                colDiv.removeClass('col-md-12').addClass('col-md-6');
            }
            $(contentId).collapse('toggle');
        });
    });
</script>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        var toggleButtons = document.querySelectorAll('.do-test');

        toggleButtons.forEach(function(toggleButton) {
            toggleButton.addEventListener('click', function() {
                var targetArea = document.getElementById('hiding'); // Select the area with the ID 'hiding'
                if (targetArea.style.display === 'none') {
                    targetArea.style.display = 'block';
                } else {
                    targetArea.style.display = 'none';
                }
            });
        });
    });
</script>




<script>
    document.addEventListener('DOMContentLoaded', function() {
        var testButtons = document.querySelectorAll('.do-test');
        testButtons.forEach(function(button) {
            button.addEventListener('click', function() {
                var testContent = button.nextElementSibling;
                var firstQuestion = testContent.querySelector('.question');
                firstQuestion.style.display = 'block';
                var otherQuestions = testContent.querySelectorAll('.question:not(#' + firstQuestion.id + ')');
                otherQuestions.forEach(function(question) {
                    question.style.display = 'none';
                });
            });
        });
    });
</script>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        var testButtons = document.querySelectorAll('.do-test');
        testButtons.forEach(function(button) {
            button.addEventListener('click', function() {
                testButtons.forEach(function(otherButton) {
                    if (otherButton !== button) {
                        if (otherButton.style.display === 'none') {
                            otherButton.style.display = 'block';
                        } else {
                            otherButton.style.display = 'none';
                        }
                    }
                });
            });
        });
    });
</script>









<script>
$('.createQuestionForm').submit(function (e) {
    e.preventDefault();

    var form = $(this);
    var formData = new FormData(form[0]);

    formData.delete('csrfmiddlewaretoken');
    var csrfToken = $('input[name=csrfmiddlewaretoken]').val();
    formData.append('csrfmiddlewaretoken', csrfToken);

    var url = form.attr('action');

    $.ajax({
        type: form.attr('method'),
        url: url,
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
            console.log(data);

            if (data.success) {
                var questionContainer = $('.question-container[data-test="' + data.test_pk + '"]');

                var newQuestionButton =
                        '<div class="question_deletion" style="display: flex; align-items: center;">' +
                        '<button class="btn btn-primary mb-3" style="width: 200px; border: 5px solid black;" data-toggle="collapse" data-target="#' + data.test_name + data.pk + 'Content">' +
                        'Newly Created Question: ' + data.name +
                        '</button>' +
                        '<form method="post" action="{% url 'main:question_delete' 0 %}" class="question-delete-form">' +
                        '{% csrf_token %}' +
                        '<button type="submit" class="btn btn-danger" style="width: 100px; border: 5px solid black; margin-left: 50px;">Delete</button>' +
                        '</form>' +
                        '</div>' +
                        '<div class="collapse" id="' + data.test_name + data.pk + 'Content">' +
                        '<h5 class="card-title">Create Option</h5>' +
                        '<form class="createOptionForm" method="post" action="{% url 'main:option_create' 0 %}" enctype="multipart/form-data">' +
                        '{% csrf_token %}' +
                        '<input type="hidden" name="question_pk" value="' + data.pk + '">' + // Include question PK in the form
                        '{% for field in option_form %}' +
                        '<div class="form-group">' +
                        '<label for="{{ field.id_for_label }}">{{ field.label }}</label>' +
                        '{{ field }}' +
                        '</div>' +
                        '{% endfor %}' +
                        '<button type="submit" class="btn btn-success" style="width: 200px; border: 5px solid black;">Create Option</button>' +
                        '</form>' +
                        '<h3>Current options</h3>' +
                        '<div class="option-container"></div>' +
                        '</div>' +
                        '<h3 style="display: flex; align-items: center;">Remaining questions!</h3>';


                newQuestionButton = newQuestionButton.replace('{% url 'main:option_create' 0 %}', '/option/' + data.pk + '/create/')
                                                     .replace('{% url 'main:question_delete' 0 %}', '/question/' + data.pk + '/delete/');



                $('.question-container' + data.test_pk).prepend(newQuestionButton);

                // Add an event listener if needed
                newQuestionButton.on('click', function () {
                    // Handle button click event if needed
                });

                form.trigger('reset');
            } else {
                // Handle errors if necessary
            }
        },
        error: function (xhr, status, error) {
            console.log('Error:', xhr.responseJSON);
            alert('An error occurred: ' + xhr.statusText);
        }
    });
});
</script>

<script>
$(document).on('submit', '.question-delete-form', function (e) {
    e.preventDefault();

    var form = $(this);
    var formData = new FormData(form[0]);

    var url = form.attr('action');

    $.ajax({
        type: form.attr('method'),
        url: url,
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
            console.log(data);

            form.closest('.question_deletion').remove();
        },
        error: function (data) {
            console.log('Error:', data.responseJSON);
        }
    });
});
</script>


<script>
$(document).on('submit', '.createOptionForm', function (e) {
    e.preventDefault();

    var form = $(this);
    var formData = new FormData(form[0]);

    formData.delete('csrfmiddlewaretoken');
    var csrfToken = $('input[name=csrfmiddlewaretoken]').val();
    formData.append('csrfmiddlewaretoken', csrfToken);

    var url = form.attr('action');

    $.ajax({
        type: form.attr('method'),
        url: url,
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
            console.log(data);

            if (data.success) {
                var optionContainer = form.siblings('.option-container'); // Selecting the container directly



                // Append the newly created option to the option container
                var newOption =
                        '<div class="option_deletion" style="display: flex; align-items: center;">' +
                        '<button class="btn btn-success mb-3" style="width: 200px; border: 5px solid black;">' + data.name + '</button>' +
                        '<form method="post" action="{% url 'main:option_delete' 0 %}" class="option-delete-form">' +
                        '{% csrf_token %}' +
                        '<input type="hidden" name="csrfmiddlewaretoken" value="' + csrfToken + '">' +
                        '<input type="hidden" name="option_pk" value="' + data.pk + '">' +
                        '<button type="submit" class="btn btn-danger" style="width: 100px; margin-left: 50px; border: 5px solid black;">Delete</button>' +
                        '</form>' +
                        '</div>';

                newOption = newOption.replace('{% url 'main:option_delete' 0 %}', '/option/' + data.pk + '/delete/');

                optionContainer.append(newOption);
                form.trigger('reset');
            } else {
                // Handle errors if necessary
            }
        },
        error: function (xhr, status, error) {
            console.log('Error:', xhr.responseJSON);
            alert('An error occurred: ' + xhr.statusText);
        }
    });
});
</script>



<script>
$(document).on('submit', '.option-delete-form', function (e) {
    e.preventDefault();

    var form = $(this);
    var formData = new FormData(form[0]);

    var url = form.attr('action');

    $.ajax({
        type: form.attr('method'),
        url: url,
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
            console.log(data);

            form.closest('.option_deletion').remove();
        },
        error: function (data) {
            console.log('Error:', data.responseJSON);
        }
    });
});
</script>



